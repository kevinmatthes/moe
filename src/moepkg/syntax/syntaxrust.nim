import highlite, syntaxc

const
  rustKeywords* = [ "abstract"
                  , "as"
                  , "become"
                  , "box"
                  , "break"
                  , "const"
                  , "continue"
                  , "crate"
                  , "do"
                  , "dyn"
                  , "else"
                  , "enum"
                  , "extern"
                  , "false"
                  , "final"
                  , "fn"
                  , "for"
                  , "if"
                  , "impl"
                  , "in"
                  , "let"
                  , "loop"
                  , "macro"
                  , "match"
                  , "mod"
                  , "move"
                  , "mut"
                  , "override"
                  , "priv"
                  , "pub"
                  , "ref"
                  , "return"
                  , "Self"
                  , "self"
                  , "static"
                  , "struct"
                  , "super"
                  , "trait"
                  , "true"
                  , "try"
                  , "type"
                  , "typeof"
                  , "unsafe"
                  , "unsized"
                  , "use"
                  , "virtual"
                  , "where"
                  , "while"
                  , "yield"
                  ]

proc rustNextToken*(g: var GeneralTokenizer) =
  clikeNextToken(g, rustKeywords, {})
